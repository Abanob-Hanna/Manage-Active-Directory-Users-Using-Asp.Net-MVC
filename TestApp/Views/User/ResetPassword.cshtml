@model TestApp.ViewModels.UserViewModel
@{
    ViewBag.Title = "ResetPassword";
    TempData.Keep();
}

<h2>Reset User Password</h2>
<p>you are tring to reset the password of this user</p>

<div class="form-horizontal">
    <div class="form-group">
        @Html.LabelFor(model => model.DisplayName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.DisplayName, new { @class = "form-control" , disable = "disable", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.DisplayName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Samaccountname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Samaccountname, new { @class = "form-control", disable = "disable", @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.Samaccountname, "", new { @class = "text-danger" })
        </div>
    </div>

    

    @using (Html.BeginForm())
    {

        <div class="form-group">
            @Html.Label("New Password", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.Password( "NewPassword", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Reset" class="btn btn-default" />
            </div>
        </div>
    }
   
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

